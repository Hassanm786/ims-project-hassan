package com.qa.ims.persistence.domain;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class Orders {

	//orders table columns
	private long id;
	private int CustomerID;
	private Double Items_value;
 //private List<Items> ItemList = new ArrayList<>();
	private String Items_list;
	//order-items table columns
	

	// Contructors can be autogenerated
	// will only need need two Constructors, one with ID and one without
	public Orders(long id, int customerID, Double items_value, String items_list) {
		super();
		this.id = id;
		CustomerID = customerID;
		Items_value = items_value;
		Items_list = items_list;
	}

	public Orders() {
	}; // Known as a default constructor

	public Orders(int customerID, Double items_value, String ItemList) {
		super();
		CustomerID = customerID;
		Items_value = items_value;
		Items_list = ItemList;
	}

//	public List<Items> addItemList(Items list) {		//Not necessary to add this method
//		ItemList.add(list);
	// return ItemList;

	// public List<Items> getItemList() {
//		return ItemList;
	public String getItems_list() {
		return Items_list;
	}

	public void setItems_list(String items_list) {
		Items_list = items_list;
	}

	// public void setItemList(List<Items> itemList) {
	// ItemList = itemList;

	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public int getCustomerID() {
		return CustomerID;
	}

	public void setCustomerID(int customerID) {
		CustomerID = customerID;
	}

	public Double getItems_value() {
		return Items_value;
	}

	public void setItems_value(Double items_value) {
		Items_value = items_value;
	}

	@Override
	public String toString() {
		return "Orders [id=" + id + ", CustomerID=" + CustomerID + ", Items_value=" + Items_value + ", Items_list="
				+ Items_list + "]";
	}

	@Override
	public int hashCode() {
		return Objects.hash(CustomerID, Items_list, Items_value, id);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Orders other = (Orders) obj;
		return CustomerID == other.CustomerID && Objects.equals(Items_list, other.Items_list)
				&& Objects.equals(Items_value, other.Items_value) && id == other.id;
	}
}

	